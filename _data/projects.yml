- layout: top-middle
  name: NexNest
  link: github.com/maxbbender/nexnest
  github: https://github.com/maxbbender/nexnest
  quote: >
    Student housing portal built with love by @Max Bender and @Mike Mcginnis
  description: | # this will include new lines to allow paragraphs
    I had written a couple websites with <mark>Flask</mark> in school, but wanted to learn more and read up on [Miguel Grinberg](https://blog.miguelgrinberg.com/)'s Flask tutorial and was exposed to a new set of best practices. Approached with an idea for a rental website targeted at students we designed and implemented a website written in <mark>Python</mark>. Backed by a fairly complex database that featured notifications and recursive comments, <mark>SQLAlchemy</mark> handles most of the direct SQL queries the complex `JOIN`s. See the ERD [here](https://github.com/maxbbender/nexnest/blob/master/docs/erd.pdf). 
- layout: top-middle
  name: Travis on Z
  link: github.com/bendermIBM/travis-cookbooks
  github: https://github.com/bendermIBM/travis-cookbooks
  quote: >
    Enabling the tool that enables the tools - on Linux on Z
  description: | # this will include new lines to allow paragraphs
    A big part of my voyage in OpenSource has been learning how to use CICD tools to build automation around a product. For me it was a necessity, because the tediousness of re-running builds had gotten to vast. Travis offers a free CICD mechanism hooked natively into GitHub and many of the projects I was looking at were using it in their pipelines.

    Internally we had a <mark>Travis</mark> environment for x86 and ppc64le, but none for s390x. I was tasked with supporting Travis on Linux on Z and so began a month dive into the source code of Travis. With this we were able to enable a regression pipeline for the release for IBM Cloud Private (ICP) on Z, a <mark>Kubernetes</mark> offering by IBM. 

    It began with connecting the [travis-ci worker](https://github.com/travis-ci/worker/network/members) to an <mark>Openstack</mark> instance hosted on z/KVM. However we ran into issues with big bursts of builds which caused the networking layer in Openstack to intermittently not initiate. Eventually we upgraded to use <mark>LXD</mark> to run the builds which gave a huge speed increase and more portability. Using <mark>Packer</mark> I built [xenial/bionic base images](https://github.com/bendermIBM/packer-templates/tree/lxd-templates-travonz) for Linux on Z and deployed a production configuration supporting 20,000+ builds a year. 

    See some changes to the [travis-build scripts](https://github.com/bendermIBM/travis-build) which also needed some configuartions

    Once I moved to the LXD based builds I was able to automate the deployment of LXD and the Travis Worker on a Ubuntu Bionic host using <mark>Ansible</mark>. Still using the previous OpenStack environment we could now provision infrastructure with <mark>Terraform</mark> and configure workers using Ansible.

- layout: top-middle
  name: Viral Education / TALOS
  link: github.com/maxbbender/Viral-Education
  github: https://github.com/maxbbender/Viral-Education
  quote: >
    TALOS (Textual Augmentation Learning of Semantics), a Web-based platform for vocabulary acquisition that provides capabilities for analytics to support learning of vocabulary. This software prototype, currently in beta-testing, supports differentiated learning as well as common coursework, allowing users to contribute and access text while promoting ease of reading.
  description: | # this will include new lines to allow paragraphs
    The first real website I made for someone other than myself. Written in <mark>PHP</mark> in a summer alongside working at the Marist College HelpDesk, this website was part of a research project that funded me to present at [INTED](https://iated.org/inted/) in Madrid, Spain. Alongside two professors, I gave a presentation on using technology to enhance learning in an un-obtrusive fashion with a concentration in learning foreign languages. 

    Backed by a <mark>MySQL</mark> database this is where I learned a lot about security in the modern age of web-development. Certain vulnerabilities such as SQL Injections and XSS were ones that I focused on researching because I knew they were some of the more common avenues of attack. Looking back on it however I have already noticed some mistakes but I was happy with how it came out.